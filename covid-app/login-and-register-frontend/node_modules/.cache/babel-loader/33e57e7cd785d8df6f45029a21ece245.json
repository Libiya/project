{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sudha\\\\Desktop\\\\project-covid19tracker-master\\\\login-and-register-frontend\\\\src\\\\components\\\\StateTable\\\\StateTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport { fetchStates } from '../api';\nimport styles from './StateTable.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StateTable = country => {\n  _s();\n\n  const [stateData, setStateData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setStateData(await fetchStates(country));\n    };\n\n    fetchAPI();\n  }, [country]);\n  const StyledTableCell = withStyles(theme => ({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white\n    },\n    body: {\n      fontSize: 14\n    }\n  }))(TableCell);\n  const StyledTableRow = withStyles(theme => ({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover\n      }\n    }\n  }))(TableRow);\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 100\n    }\n  });\n  const provinceData = stateData;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [provinceData.length > 1 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Statewise Data for \", country.country]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Statewise Data for \", country.country, \" is not Available\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 58\n    }, this), provinceData.length > 1 ? /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              width: \"100\",\n              children: \"States\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              width: \"50\",\n              children: \"Confirmed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              width: \"50\",\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"left\",\n              width: \"50\",\n              children: \"Deaths\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: provinceData.length > 1 ? provinceData.map(data => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: data.provinceState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              style: {\n                color: 'rgba(0, 139, 139, 0.8)'\n              },\n              align: \"left\",\n              children: data.confirmed\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              style: {\n                color: 'rgba(0, 0, 255, 0.8)'\n              },\n              align: \"left\",\n              children: data.active\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              style: {\n                color: 'rgba(255, 0, 0, 0.8)'\n              },\n              align: \"left\",\n              children: data.deaths\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)]\n          }, data.provinceState, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)) : 'Statewise Data for this Country is not Available.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StateTable, \"dnNwSnke2jXOuBiGjy3yBFYXsx4=\", true);\n\n_c = StateTable;\nexport default StateTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"StateTable\");","map":{"version":3,"sources":["C:/Users/sudha/Desktop/project-covid19tracker-master/login-and-register-frontend/src/components/StateTable/StateTable.jsx"],"names":["React","useState","useEffect","makeStyles","withStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","fetchStates","styles","StateTable","country","stateData","setStateData","fetchAPI","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","action","hover","useStyles","table","minWidth","provinceData","classes","container","length","map","data","provinceState","confirmed","active","deaths"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport { fetchStates } from '../api';\nimport styles from './StateTable.module.css';\n\nconst StateTable = (country) => {\n  const [stateData, setStateData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setStateData(await fetchStates(country));\n    };\n    fetchAPI();\n  }, [country]);\n\n  const StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n\n  const StyledTableRow = withStyles((theme) => ({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  }))(TableRow);\n\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 100,\n    },\n  });\n\n  const provinceData = stateData;\n  const classes = useStyles();\n  return (\n    <div className={styles.container}>\n      {provinceData.length > 1 ? (\n        <h3>Statewise Data for {country.country}</h3>) : <h3>Statewise Data for {country.country} is not Available</h3>}\n      {provinceData.length > 1 ? (\n        <TableContainer component={Paper}>\n          <Table className={classes.table} stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell width=\"100\">States</StyledTableCell>\n                <StyledTableCell align=\"left\" width=\"50\">Confirmed</StyledTableCell>\n                <StyledTableCell align=\"left\" width=\"50\">Active</StyledTableCell>\n                <StyledTableCell align=\"left\" width=\"50\">Deaths</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {provinceData.length > 1 ? provinceData.map((data) => (\n                <StyledTableRow key={data.provinceState}>\n                  <StyledTableCell component=\"th\" scope=\"row\">\n                    {data.provinceState}\n                  </StyledTableCell>\n                  <StyledTableCell style={{ color: 'rgba(0, 139, 139, 0.8)' }} align=\"left\">{data.confirmed}</StyledTableCell>\n                  <StyledTableCell style={{ color: 'rgba(0, 0, 255, 0.8)' }} align=\"left\">{data.active}</StyledTableCell>\n                  {/* <StyledTableCell style={{ color: 'rgba(0, 140, 0, 0.8)' }} align=\"left\">{data.recovered}</StyledTableCell> */}\n                  <StyledTableCell style={{ color: 'rgba(255, 0, 0, 0.8)' }} align=\"left\">{data.deaths}</StyledTableCell>\n                </StyledTableRow>\n              )) : 'Statewise Data for this Country is not Available.'}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      ) : null}\n    </div>\n  );\n};\nexport default StateTable;"]},"metadata":{},"sourceType":"module"}