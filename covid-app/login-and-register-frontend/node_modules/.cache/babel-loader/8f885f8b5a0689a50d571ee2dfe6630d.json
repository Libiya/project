{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sudha\\\\Desktop\\\\project-covid19tracker-master\\\\login-and-register-frontend\\\\src\\\\components\\\\Chart\\\\Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { fetchDailyData } from '../api';\nimport styles from './Chart.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = ({\n  data: {\n    confirmed,\n    deaths\n  },\n  country\n}) => {\n  _s();\n\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n  const barChart = confirmed ? /*#__PURE__*/_jsxDEV(Bar, {\n    data: {\n      labels: ['Infected', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        data: [confirmed.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current situation in ${country}`\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this) : null;\n  const lineChart = dailyData[0] ? /*#__PURE__*/_jsxDEV(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(data => data.confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(data => data.deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: country ? barChart : lineChart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart, \"/d+kuJuKj12qpSq7YzoKfQOF8wE=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/Users/sudha/Desktop/project-covid19tracker-master/login-and-register-frontend/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","Line","Bar","fetchDailyData","styles","Chart","data","confirmed","deaths","country","dailyData","setDailyData","fetchMyAPI","initialDailyData","barChart","labels","datasets","label","backgroundColor","value","legend","display","title","text","lineChart","map","date","borderColor","fill","container"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AAEA,SAASC,cAAT,QAA+B,QAA/B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAR;AAA+BC,EAAAA;AAA/B,CAAD,KAA8C;AAAA;;AAC1D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,UAAU,GAAG,YAAY;AAC7B,YAAMC,gBAAgB,GAAG,MAAMV,cAAc,EAA7C;AAEAQ,MAAAA,YAAY,CAACE,gBAAD,CAAZ;AACD,KAJD;;AAMAD,IAAAA,UAAU;AACX,GARQ,EAQN,EARM,CAAT;AAUA,QAAME,QAAQ,GACZP,SAAS,gBACP,QAAC,GAAD;AACE,IAAA,IAAI,EAAE;AACJQ,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,QAAb,CADJ;AAEJC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,QADT;AAEEC,QAAAA,eAAe,EAAE,CAAC,sBAAD,EAAyB,sBAAzB,CAFnB;AAGEZ,QAAAA,IAAI,EAAE,CAACC,SAAS,CAACY,KAAX,EAAkBX,MAAM,CAACW,KAAzB;AAHR,OADQ;AAFN,KADR;AAWE,IAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADD;AAEPC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAE,IAAX;AAAiBE,QAAAA,IAAI,EAAG,wBAAuBd,OAAQ;AAAvD;AAFA;AAXX;AAAA;AAAA;AAAA;AAAA,UADO,GAiBL,IAlBN;AAqBA,QAAMe,SAAS,GACbd,SAAS,CAAC,CAAD,CAAT,gBACE,QAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJK,MAAAA,MAAM,EAAEL,SAAS,CAACe,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADJ;AAEJV,MAAAA,QAAQ,EAAE,CAAC;AACTV,QAAAA,IAAI,EAAEI,SAAS,CAACe,GAAV,CAAenB,IAAD,IAAUA,IAAI,CAACC,SAA7B,CADG;AAETU,QAAAA,KAAK,EAAE,UAFE;AAGTU,QAAAA,WAAW,EAAE,SAHJ;AAITC,QAAAA,IAAI,EAAE;AAJG,OAAD,EAKP;AACDtB,QAAAA,IAAI,EAAEI,SAAS,CAACe,GAAV,CAAenB,IAAD,IAAUA,IAAI,CAACE,MAA7B,CADL;AAEDS,QAAAA,KAAK,EAAE,QAFN;AAGDU,QAAAA,WAAW,EAAE,KAHZ;AAIDT,QAAAA,eAAe,EAAE,sBAJhB;AAKDU,QAAAA,IAAI,EAAE;AALL,OALO;AAFN;AADR;AAAA;AAAA;AAAA;AAAA,UADF,GAmBI,IApBN;AAuBA,sBACE;AAAK,IAAA,SAAS,EAAExB,MAAM,CAACyB,SAAvB;AAAA,cACGpB,OAAO,GAAGK,QAAH,GAAcU;AADxB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA9DD;;GAAMnB,K;;KAAAA,K;AAgEN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport { fetchDailyData } from '../api';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const barChart = (\n    confirmed ? (\n      <Bar\n        data={{\n          labels: ['Infected', 'Deaths'],\n          datasets: [\n            {\n              label: 'People',\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n              data: [confirmed.value, deaths.value],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: false },\n          title: { display: true, text: `Current situation in ${country}` },\n        }}\n      />\n    ) : null\n  );\n\n  const lineChart = (\n    dailyData[0] ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [{\n            data: dailyData.map((data) => data.confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true,\n          }, {\n            data: dailyData.map((data) => data.deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n          },\n          ],\n        }}\n      />\n    ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n  );\n};\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}